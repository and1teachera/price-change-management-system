services:
  rms-integration-service-us:
    build:
      context: .
      dockerfile: services/rms-integration-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME:-user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-password}
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    volumes:
      - ./us-region/local:/app/src/main/resources/local
      - ./us-region/archive:/app/src/main/resources/archive
      - ./us-region/error:/app/src/main/resources/error
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rms-integration-service-europe:
    build:
      context: .
      dockerfile: services/rms-integration-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME:-user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-password}
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    volumes:
      - ./europe-region/local:/app/src/main/resources/local
      - ./europe-region/archive:/app/src/main/resources/archive
      - ./europe-region/error:/app/src/main/resources/error
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rms-integration-service-asia:
    build:
      context: .
      dockerfile: services/rms-integration-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME:-user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-password}
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    volumes:
      - ./asia-region/local:/app/src/main/resources/local
      - ./asia-region/archive:/app/src/main/resources/archive
      - ./asia-region/error:/app/src/main/resources/error
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pricelogix-feed-service:
    build:
      context: .
      dockerfile: services/pricelogix-feed-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME:-user}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-password}
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
    volumes:
      - ./pricelogix/output:/app/src/main/resources/output
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "5671:5671"   # AMQP TLS port
      - "15672:15672" # Management UI port
      - "15671:15671" # Management UI TLS port
      - "15692:15692" # Prometheus metrics endpoint
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-password}
      RABBITMQ_CONFIG_FILE: /etc/rabbitmq/rabbitmq.conf
      RABBITMQ_DEFINITIONS_FILE: /etc/rabbitmq/definitions.json
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./config/rabbitmq/etc/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./config/rabbitmq/etc/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./config/rabbitmq/certs:/etc/rabbitmq/certs:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/etc/grafana/dashboards:ro
    depends_on:
      - prometheus
      - loki
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki:/etc/loki:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yaml
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  default:
    driver: bridge
