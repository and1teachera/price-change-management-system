name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run unit tests
        run: ./gradlew test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/build/reports/tests/'

  build-and-verify:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Install Docker Compose V2
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.31.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose

      - name: Validate Docker Compose configuration
        run: docker compose config

      - name: Build Docker images
        run: docker compose build

      - name: Start containers
        run: |
          docker compose up -d
          sleep 30  # Give containers time to fully start

      - name: Check container health
        run: |
          docker compose ps
          docker compose logs
          
          # Check if all containers are healthy
          UNHEALTHY=$(docker compose ps --format json | jq -r '.[].Health' | grep -v healthy || true)
          if [ ! -z "$UNHEALTHY" ]; then
            echo "Some containers are not healthy"
            exit 1
          fi

      - name: Stop containers
        if: always()
        run: docker compose down -v